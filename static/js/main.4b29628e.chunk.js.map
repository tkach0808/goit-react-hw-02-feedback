{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","styles.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notificatiom/Notificatiom.js","app.js","index.js"],"names":["module","exports","Section","title","children","className","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","Feedback","onLeaveFeedback","s","buttonWrp","type","name","feedbackButton","onClick","Notification","message","App","state","feedback","target","setState","prevState","countPositiveFeedbackPercentage","totel","countTotalFeedback","Object","values","reduce","a","b","this","Math","round","feedBacBlock","Component","ReactDOM","render","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,UAAY,mCAAmC,eAAiB,0C,qBCAlFD,EAAOC,QAAU,CAAC,aAAe,+B,sLCQlBC,G,MANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BAASC,UAAU,cACjB,wBAAIA,UAAU,iBAAiBF,GAC/B,yBAAKE,UAAU,kBAAkBD,MCF/BE,G,MAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,yBAAKN,UAAU,oBACb,uBAAGA,UAAU,aAAb,UAAiCE,GACjC,uBAAGF,UAAU,aAAb,aAAoCG,GACpC,uBAAGH,UAAU,aAAb,SAAgCI,GAChC,uBAAGJ,UAAU,aAAb,WAAkCK,GACV,IAAvBC,EAA2B,KAC1B,uBAAGN,UAAU,aAAb,sBAA6CM,EAA7C,QAKNL,EAAWM,aAAe,CACxBL,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,GAUMJ,Q,gBC1BA,SAASO,EAAT,GAAwC,IAApBC,EAAmB,EAAnBA,gBACjC,OACE,yBAAKT,UAAWU,IAAEC,WAChB,4BACEC,KAAK,SACLC,KAAK,OACLb,UAAWU,IAAEI,eACbC,QAASN,GAJX,QAQA,4BACEG,KAAK,SACLC,KAAK,UACLb,UAAWU,IAAEI,eACbC,QAASN,GAJX,WAQA,4BACEG,KAAK,SACLC,KAAK,MACLb,UAAWU,IAAEI,eACbC,QAASN,GAJX,QCrBSO,mBAAe,gBAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,I,gBCM9BC,E,4MACnBC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPK,gBAAkB,SAACW,GACjB,IAAMP,EAAOO,EAASC,OAAOR,KAC7B,EAAKS,UAAS,SAACC,GACb,OAAO,eAAGV,EAAOU,EAAUV,GAAQ,O,EAIvCW,gCAAkC,SAACC,GAAD,OAAY,EAAKN,MAAMjB,KAAOuB,EAAS,K,EAEzEC,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKT,OAAOU,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,I,uDAGjD,IAAD,EACwBC,KAAKb,MAA5BjB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ2B,KAAKN,qBACbpB,EAAqB2B,KAAKC,MAC9BF,KAAKR,gCAAgCnB,EAAOH,IAG9C,OACE,yBAAKF,UAAWU,IAAEyB,cAChB,kBAAC,EAAD,CAASrC,MAAM,2BACb,kBAACU,EAAD,CAAiBC,gBAAiBuB,KAAKvB,mBAEzC,kBAAC,EAAD,CAASX,MAAM,cACZO,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcW,QAAQ,4B,GAzCDmB,aCJjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4b29628e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrp\":\"FeedbackOptions_buttonWrp__2te-r\",\"feedbackButton\":\"FeedbackOptions_feedbackButton__2ofmL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedBacBlock\":\"styles_feedBacBlock__2tuuL\"};","import React from \"react\";\nimport styles from \"./Section.modul.css\";\n\nconst Section = ({ title, children }) => (\n  <section className=\"sectionWrp\">\n    <h1 className=\"sectionTittle\">{title}</h1>\n    <div className=\"sectionContent\">{children}</div>\n  </section>\n);\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.modul.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className=\"statisticSection\">\n    <p className=\"statistic\">Good = {good}</p>\n    <p className=\"statistic\">Neutral = {neutral}</p>\n    <p className=\"statistic\">Bad = {bad}</p>\n    <p className=\"statistic\">Total = {total}</p>\n    {positivePercentage === 0 ? null : (\n      <p className=\"statistic\">Positiv Feedback = {positivePercentage}%</p>\n    )}\n  </div>\n);\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nexport default function Feedback({ onLeaveFeedback }) {\n  return (\n    <div className={s.buttonWrp}>\n      <button\n        type=\"button\"\n        name=\"good\"\n        className={s.feedbackButton}\n        onClick={onLeaveFeedback}\n      >\n        Good\n      </button>\n      <button\n        type=\"button\"\n        name=\"neutral\"\n        className={s.feedbackButton}\n        onClick={onLeaveFeedback}\n      >\n        Neutral\n      </button>\n      <button\n        type=\"button\"\n        name=\"bad\"\n        className={s.feedbackButton}\n        onClick={onLeaveFeedback}\n      >\n        Bad\n      </button>\n    </div>\n  );\n}\nFeedback.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React from \"react\";\n\nexport default Notification = ({ message }) => <p>{message}</p>;\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/Notificatiom/Notificatiom\";\n\nimport s from \"./styles.module.css\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = (feedback) => {\n    const name = feedback.target.name;\n    this.setState((prevState) => {\n      return { [name]: prevState[name] + 1 };\n    });\n  };\n\n  countPositiveFeedbackPercentage = (totel) => (this.state.good / totel) * 100;\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((a, b) => a + b, 0);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = Math.round(\n      this.countPositiveFeedbackPercentage(total, good)\n    );\n\n    return (\n      <div className={s.feedBacBlock}>\n        <Section title=\"please leave a feedback\">\n          <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}